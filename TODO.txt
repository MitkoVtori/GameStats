- 2 web pages.

- 3 independent models

- At least 5 custom options (in total) to the admin interface (e.g., filters, list display, ordering, etc.).

- Authenticated users (private part) have full CRUD for all their created content



• Implement Exception Handling and Data Validation to avoid crashes when invalid data is entered
(both client-side and server-side)
o When validating data, show appropriate messages to the user


--- Bonuses ---

• Write tests (Unit & Integration) for your views/models/forms - at least 10 tests

• Writing asynchronous view/s somewhere in the project - View that shows latest information without refreshing the page

• Extend your Django project with REST Capabilities

• Host the application in a cloud environment

• Additional functionality






• Exception handling and/or Data validation (validation in the models and/or the forms) – 0…5
• Security (prevent SQL injection, XSS, CSRF, parameter tampering, etc.) – 0…5
• Code quality (well-structured code, following the MTV pattern, following SOLID principles, etc.) – 0…10